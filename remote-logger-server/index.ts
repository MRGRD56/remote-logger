import * as express from 'express';
import * as cors from 'cors';
import {isAutoGeneratedToken, RemoteLoggerServer, RemoteLoggerServerParams} from "./types";
import handlePostLog from "./controllers/handlePostLog";
import handleGetCheckRemoteLogger from "./controllers/handleGetCheckRemoteLogger";
import checkAccessToken from "./middleware/checkAccessToken";
import generateAccessToken from "./utils/generateAccessToken";

const remoteLoggerServer = (port: number, params?: RemoteLoggerServerParams): RemoteLoggerServer => {
    const accessToken = isAutoGeneratedToken(params.accessToken) ? generateAccessToken() : params.accessToken;
    if (isAutoGeneratedToken(params.accessToken)) {
        console.log(`Access Token: ${params.accessToken}`);
    }

    const app = express();
    app.use(express.json());
    app.use(cors());
    app.use(checkAccessToken(accessToken));

    app.get('/');
    app.get('/check_remote_logger', handleGetCheckRemoteLogger);

    app.listen(3333, () => {
        console.log(`Listening remote-logger-server on port ${port}`);
    });

    return {
        listen: (callback) => handlePostLog(app, callback)
    };
};

export default remoteLoggerServer;